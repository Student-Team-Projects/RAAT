<?xml version="1.0" encoding="utf-8"?><!--
  ~ Copyright (c) 2020  Gaurav Ujjwal.
  ~
  ~ SPDX-License-Identifier:  GPL-3.0-or-later
  ~
  ~ See COPYING.txt for more details.
  -->

<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <data>

        <import type="com.gaurav.avnc.vnc.VncClient.State" />

        <variable
            name="viewModel"
            type="com.gaurav.avnc.viewmodel.VncViewModel" />
    </data>

    <!--
    There are three components of this screen:

    1. FrameView :- Renders remote content. This is "behind" all other Views.

    2. Drawers   :- These represents the toolbars and are rendered on top of FrameView.
                    Currently, we only have one drawer.

    3. Status    :- Topmost View. Shows progress indicator, status msg etc. It is initially
                    visible but becomes invisible once we are successfully connected to server.
    -->

    <FrameLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:animateLayoutChanges="true">


        <androidx.drawerlayout.widget.DrawerLayout
            android:id="@+id/drawer_layout"
            android:layout_width="match_parent"
            android:layout_height="match_parent">


            <!--FrameView-->
            <com.gaurav.avnc.ui.vnc.FrameView
                android:id="@+id/frame_view"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:background="@drawable/frame_bg"
                android:focusable="true"
                android:focusableInTouchMode="true"
                android:keepScreenOn="true"
                app:isVisible="@{viewModel.clientState == State.Connected}" />


            <!--Drawers-->
            <LinearLayout
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_gravity="end|center_vertical"
                android:background="@drawable/bg_round_rect"
                android:orientation="vertical">

                <ImageButton
                    android:id="@+id/kb_btn"
                    android:layout_width="@dimen/action_btn_size"
                    android:layout_height="@dimen/action_btn_size"
                    android:background="?attr/selectableItemBackgroundBorderless"
                    android:contentDescription="@string/desc_kb_btn"
                    android:src="@drawable/ic_keyboard" />

            </LinearLayout>

        </androidx.drawerlayout.widget.DrawerLayout>

        <!--Status-->
        <androidx.constraintlayout.widget.ConstraintLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            app:isVisible="@{viewModel.clientState != State.Connected}">

            <ProgressBar
                android:id="@+id/progressBar"
                style="@style/Widget.AppCompat.ProgressBar"
                android:layout_width="60dp"
                android:layout_height="60dp"
                android:indeterminate="true"
                android:padding="@dimen/padding_small"
                app:isVisible="@{viewModel.clientState != State.Disconnected}"
                app:layout_constraintBottom_toTopOf="@id/client_state"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintStart_toStartOf="parent" />

            <ImageView
                android:layout_width="60dp"
                android:layout_height="60dp"
                android:contentDescription="@string/desc_disconnected_icon"
                android:src="@drawable/ic_warning"
                android:tint="?attr/colorError"
                app:isVisible="@{viewModel.clientState == State.Disconnected}"
                app:layout_constraintBottom_toTopOf="@id/client_state"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintStart_toStartOf="parent" />

            <TextView
                android:id="@+id/client_state"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_margin="@dimen/margin_normal"
                android:text="@{viewModel.clientState.toString()}"
                app:layout_constraintBottom_toBottomOf="parent"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintTop_toTopOf="parent" />

        </androidx.constraintlayout.widget.ConstraintLayout>

    </FrameLayout>
</layout>